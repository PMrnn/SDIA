Object subclass: #Game	instanceVariableNames: ''	classVariableNames: ''	package: 'TP3'!!Game methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 13:56'!play: aString against: aString2	(aString = 'rock' and: aString2 = 'scissors') ifTrue: [ ^ 'rock' ] ifFalse: [ ^ 'paper' ]	! !TestCase subclass: #GameTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP3'!!GameTest methodsFor: 'tests' stamp: 'PierreMauron 10/7/2022 14:37'!testRockVSScissors 	| rock scissors |	rock:= Rock new.	scissors:= Scissors new.	self assert: (rock against: scissors) equals: 'rock'.	self assert: (scissors against: rock) equals: 'rock'! !!GameTest methodsFor: 'tests' stamp: 'PierreMauron 10/7/2022 14:43'!testRockVSRock	| rock rock2 |	rock:= Rock new.	rock2:= Rock new.	self assert: (rock against: rock2) equals: 'draw'! !!GameTest methodsFor: 'tests' stamp: 'PierreMauron 10/9/2022 16:34'!testPaperVSSpock	| paper spock |	paper:= Paper new.	spock:= Spock new.	self assert: (paper against: spock) equals: 'paper'! !!GameTest methodsFor: 'tests' stamp: 'PierreMauron 10/9/2022 16:41'!testScissorsVSSpock	| scissors spock |	scissors:= Scissors new.	spock:= Spock new.	self assert: (scissors against: spock) equals: 'spock'.	self assert: (spock against: scissors) equals: 'spock'! !!GameTest methodsFor: 'tests' stamp: 'PierreMauron 10/7/2022 15:23'!testLizardVSPaper	| lizard paper |	lizard:= Lizard new.	paper:= Paper new.	self assert: (lizard against: paper) equals: 'lizard'.	self assert: (paper against: lizard) equals: 'lizard'! !!GameTest methodsFor: 'tests' stamp: 'PierreMauron 10/7/2022 14:43'!testPaperVSPaper	| paper paper2 |	paper:= Paper new.	paper2:= Paper new.	self assert: (paper against: paper2) equals: 'draw'! !!GameTest methodsFor: 'tests' stamp: 'PierreMauron 10/7/2022 14:41'!testScissorsVSPaper	| scissors paper |	scissors:= Scissors new.	paper:= Paper new.	self assert: (scissors against: paper) equals: 'scissors'.	self assert: (paper against: scissors) equals: 'scissors'! !!GameTest methodsFor: 'tests' stamp: 'PierreMauron 10/9/2022 16:27'!testLizardVSScissors	| lizard scissors |	lizard:= Lizard new.	scissors:= Scissors new.	self assert: (lizard against: scissors) equals: 'scissors'.	self assert: (scissors against: lizard) equals: 'scissors'! !!GameTest methodsFor: 'tests' stamp: 'PierreMauron 10/7/2022 14:37'!testRockVSPaper	| rock paper |	rock:= Rock new.	paper:= Paper new.	self assert: (rock against: paper) equals: 'paper'.	self assert: (paper against: rock) equals: 'paper'! !!GameTest methodsFor: 'tests' stamp: 'PierreMauron 10/7/2022 15:20'!testScissorsVSScissors	| lizard lizard2 |	lizard:= Lizard new.	lizard2:= Lizard new.	self assert: (lizard against: lizard2) equals: 'draw'! !!GameTest methodsFor: 'tests' stamp: 'PierreMauron 10/9/2022 16:29'!testSpockVSSpock	| spock spock2 |	spock:= Spock new.	spock2:= Spock new.	self assert: (spock against: spock2) equals: 'draw'! !!GameTest methodsFor: 'tests' stamp: 'PierreMauron 10/9/2022 16:38'!testRockVSSpock	| rock spock |	rock:= Rock new.	spock:= Spock new.	self assert: (rock against: spock) equals: 'spock'.	self assert: (spock against: rock) equals: 'spock'! !!GameTest methodsFor: 'tests' stamp: 'PierreMauron 10/7/2022 15:23'!testLizardVSRock	| lizard rock |	lizard:= Lizard new.	rock:= Rock new.	self assert: (lizard against: rock) equals: 'rock'.	self assert: (rock against: lizard) equals: 'rock'! !!GameTest methodsFor: 'tests' stamp: 'PierreMauron 10/9/2022 16:28'!testLizardVSSpock	| lizard spock |	lizard:= Lizard new.	spock:= Spock new.	self assert: (lizard against: spock) equals: 'lizard'.	self assert: (spock against: lizard) equals: 'lizard'! !!GameTest methodsFor: 'tests' stamp: 'PierreMauron 10/7/2022 15:22'!testLizardVSLizard	| lizard lizard2 |	lizard:= Lizard new.	lizard2:= Lizard new.	self assert: (lizard against: lizard2) equals: 'draw'! !Game subclass: #Lizard	instanceVariableNames: ''	classVariableNames: ''	package: 'TP3'!!Lizard methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 15:18'!againstRock	^ 'rock'! !!Lizard methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 15:19'!against: anObj 	^ anObj againstLizard! !!Lizard methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 15:15'!againstLizard	^ 'draw'! !!Lizard methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 15:18'!againstScissors	^ 'scissors'! !!Lizard methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 15:17'!againstPaper	^ 'lizard'! !!Lizard methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 15:16'!againstSpock	^ 'lizard'! !Game subclass: #Paper	instanceVariableNames: ''	classVariableNames: ''	package: 'TP3'!!Paper methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 14:13'!againstRock	^ 'paper'	 ! !!Paper methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 14:33'!against: anObj 	^ anObj againstPaper! !!Paper methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 15:07'!againstLizard	^ 'lizard'	 ! !!Paper methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 14:14'!againstScissors	^ 'scissors'	 ! !!Paper methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 14:13'!againstPaper 	^ 'draw'	 ! !!Paper methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 15:07'!againstSpock	^ 'paper'	 ! !Game subclass: #Rock	instanceVariableNames: ''	classVariableNames: ''	package: 'TP3'!!Rock methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 14:14'!againstRock	^ 'draw'! !!Rock methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 14:33'!against: anObj 	^ anObj againstRock ! !!Rock methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 15:08'!againstLizard	^ 'rock'! !!Rock methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 14:15'!againstScissors	^ 'rock'! !!Rock methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 14:14'!againstPaper	^ 'paper'! !!Rock methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 15:09'!againstSpock	^ 'spock'! !Game subclass: #Scissors	instanceVariableNames: ''	classVariableNames: ''	package: 'TP3'!!Scissors methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 14:16'!againstRock	^ 'rock'! !!Scissors methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 14:33'!against: anObj	^ anObj againstScissors! !!Scissors methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 15:10'!againstLizard	^ 'scissors'! !!Scissors methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 14:15'!againstScissors	^ 'draw'! !!Scissors methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 14:16'!againstPaper	^ 'scissors'! !!Scissors methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 15:11'!againstSpock	^ 'spock'! !Game subclass: #Spock	instanceVariableNames: ''	classVariableNames: ''	package: 'TP3'!!Spock methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/9/2022 16:38'!againstRock	^ 'spock'! !!Spock methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 15:14'!against: anObj	^ anObj againstSpock! !!Spock methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/9/2022 16:28'!againstLizard	^ 'lizard'! !!Spock methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/9/2022 16:41'!againstScissors	^ 'spock'! !!Spock methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 15:13'!againstPaper	^ 'paper'! !!Spock methodsFor: 'as yet unclassified' stamp: 'PierreMauron 10/7/2022 15:11'!againstSpock	^ 'draw'! !